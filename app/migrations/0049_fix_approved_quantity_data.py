# Generated by Django 5.2.1 on 2025-08-29 13:42

from django.db import migrations


def fix_approved_quantity(apps, schema_editor):
    """
    Fix existing approved items that don't have approved_quantity set.
    Set approved_quantity to the original requested quantity for these items.
    """
    SupplyRequestItem = apps.get_model('app', 'SupplyRequestItem')
    
    # Find approved items without approved_quantity
    items_to_fix = SupplyRequestItem.objects.filter(
        status='approved',
        approved_quantity__isnull=True
    )
    
    # Update them with their requested quantity
    for item in items_to_fix:
        item.approved_quantity = item.quantity
        item.save()
    
    print(f"Fixed {items_to_fix.count()} approved items without approved_quantity")


def reverse_fix_approved_quantity(apps, schema_editor):
    """
    Reverse migration - set approved_quantity back to None for items that were fixed
    """
    # This is optional since we're just fixing data consistency
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0048_add_claim_complete_actions'),
    ]

    operations = [
        migrations.RunPython(fix_approved_quantity, reverse_fix_approved_quantity),
    ]
